name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-setuptools git zip unzip openjdk-8-jdk libffi-dev libssl-dev

      - name: Install Python Dependencies
        run: |
          pip3 install --upgrade pip
          pip3 install buildozer cython virtualenv

      - name: Setup Android SDK and Commandline Tools
        run: |
          mkdir -p $ANDROID_SDK_ROOT
          cd $ANDROID_SDK_ROOT
          wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip commandlinetools-linux-8512546_latest.zip -d cmdline-tools
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/cmdline-tools/* cmdline-tools/latest/
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          yes | sdkmanager --licenses || true
          # تثبيت إصدارات محددة من Build Tools و AIDL لتجنب المشاكل
          sdkmanager "platforms;android-30" "build-tools;30.0.3" "platform-tools"
        shell: bash

      - name: Accept Android Licenses Manually
        run: |
          mkdir -p $ANDROID_SDK_ROOT/licenses
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > $ANDROID_SDK_ROOT/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_SDK_ROOT/licenses/android-sdk-preview-license
        shell: bash

      - name: Build APK with Buildozer
        run: |
          buildozer -v android debug
        shell: bash

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MyCaptchaApp-APK
          path: bin/*.apk
